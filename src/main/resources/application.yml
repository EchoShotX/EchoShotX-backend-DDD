spring:
  datasource:
    url: jdbc:mysql://localhost:3306/{{ secrets.DATABASE_NAME }}?serverTimezone=UTC
    username: {{ secrets.DATABASE_USERNAME }}
    password: {{ secrets.DATABASE_PASSWORD }}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      port: {{ secrets.REDIS_PORT }}
      host: {{ secrets.REDIS_HOST }}
      password:

  jpa:
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true  # SQL 포맷 정렬 여부
        show_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: {{ secrets.GOOGLE_CLIENT_ID }}
            client-secret: {{ secrets.GOOGLE_CLIENT_SECRET }}
            scope:
              - email
          naver:
            client-id: {{ secrets.NAVER_CLIENT_ID }}
            client-secret: {{ secrets.NAVER_CLIENT_SECRET }}
            scope: email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          kakao:
            client-id: {{ secrets.KAKAO_CLIENT_ID }}
            client-secret: {{ secrets.KAKAO_CLIENT_SECRET }}
            scope: account_email
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

auth:
  success-redirect-uri: "{baseUrl}/login/oauth2/callback"

# 서버 포트 설정 (기본 포트 변경 시)
server:
  port: 8080
#  servlet:
#    context-path: /api/v1 # controller 접두사

# 로깅 레벨 설정 (필요 시)
logging:
  level:
    root: info
    org.springframework.web: debug

#jwt secret
app:
  jwt:
    secret: {{ secrets.JWT_SECRET }}
  cors:
    front-path: {{ secrets.FRONT_URL }} #cors front url

#cloud
cloud:
  aws:
    credentials:
      access-key: {{ secrets.AWS_ACCESS_KEY }} # 환경변수 필요
      secret-key: {{ secrets.AWS_SECRET_KEY }} # 환경변수 필요
    region:
      static: ap-northeast-2
    s3:
      bucket: {{ secrets.AWS_S3_BUCKET }} # 환경변수 필요

